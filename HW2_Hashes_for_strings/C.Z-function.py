"""
Ограничение времени	- 2 секунды
Ограничение памяти	- 256Mb

Дана непустая строка S, длина которой N не превышает 106.
Будем считать, что элементы строки нумеруются от 0 до N-1.

Вычислите z-функцию z[i] для всех i от 0 до N-1. z[i] определяется как максимальная длина
подстроки, начинающейся с позиции i и совпадающей с префиксом всей строки. z[0] = 0

Формат ввода
Одна строка длины N, 0 < N ≤ 106, состоящая из прописных латинских букв.

Формат вывода
Выведите N чисел — значения z-функции для каждой позиции, разделённые пробелом.

Пример
Ввод
abracadabra
Вывод
0 0 0 1 0 1 0 4 0 0 1
"""


def calculate_z_function(s):
    n = len(s)
    # Инициализация массива Z-функции длины n
    z = [0] * n
    # Индексы текущего самого правого отрезка [l, r]
    l, r = 0, 0

    # Обходим все символы строки начиная со второго
    for i in range(1, n):
        # Если текущий индекс i находится внутри текущего отрезка [l, r],
        # используем предварительно вычисленные значения Z-функции
        if i <= r:
            z[i] = min(r - i + 1, z[i - l])

        # Пока символы на позициях s[z[i]] и s[i + z[i]] совпадают,
        # увеличиваем значение Z-функции z[i]
        while i + z[i] < n and s[z[i]] == s[i + z[i]]:
            z[i] += 1

        # Если новый отрезок [l, r] выходит за границы текущего,
        # обновляем значения l и r
        if i + z[i] - 1 > r:
            l, r = i, i + z[i] - 1

    return z

s = input().strip()
result = calculate_z_function(s)
print(*result)
