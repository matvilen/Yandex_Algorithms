"""
Ограничение времени	- 5 секунд
Ограничение памяти	- 512Mb

Базовый алгоритм для сортировки слиянием — алгоритм слияния двух упорядоченных массивов
в один упорядоченный массив. Эта операция выполняется за линейное время с линейным потреблением
памяти. Реализуйте слияние двух массивов в качестве первого шага для написания сортировки слиянием.

Формат ввода
В первой строке входного файла содержится число N — количество элементов первого массива (0 ≤ N ≤ 106).
Во второй строке содержатся N целых чисел ai, разделенных пробелами, отсортированные по неубыванию (-109 ≤ ai ≤ 109).
В третьей строке входного файла содержится число M — количество элементов второго массива (0 ≤ M ≤ 106).
В третьей строке содежатся M целых чисел bi, разделенных пробелами, отсортированные по неубыванию (-109 ≤ bi ≤ 109).

Формат вывода
Выведите результат слияния этих двух массивов, то есть M + N целых чисел, разделенных пробелами, в порядке неубывания.

Пример 1
Ввод
5
1 3 5 5 9
3
2 5 6
Вывод
1 2 3 5 5 5 6 9

Пример 2
Ввод
1
0
0

Вывод
0

Пример 3
Ввод
0

1
0
Вывод
0
"""


n1 = int(input())
ls1 = list(map(int, input().split()))
n2 = int(input())
ls2 = list(map(int, input().split()))

res_ar = []
i, j = 0, 0
while i < n1 and j < n2:
    num1 = ls1[i]
    num2 = ls2[j]
    if num1 <= num2:
        res_ar.append(num1)
        i += 1
    else:
        res_ar.append(num2)
        j += 1
print(*(res_ar + (ls1[i::] if i < n1 else ls2[j::])))