"""
Ограничение времени	- 1 секунда
Ограничение памяти	- 256Mb

В группе учатся n студентов, каждый из которых имеет свой рейтинг a_i. Им нужно выбрать старосту;
для этого студенты хотят выбрать старосту таким образом чтобы суммарный уровень недовольства
группы был минимальный. Если выбрать j-го старостой, то уровень недовольства i-го студента равен
∣a_i - a_j|.
Например, если в группе есть три студента с рейтингами
1, 3 и 4 и в качестве старосты выбирают второго, то уровень недовольства группы будет равен
|1-3| + |3-3| + |4-3|

Вычислите уровень недовольства группы при выборе каждого из студентов старостой.

Формат ввода
В первой строке дано единственное целое число n (1 ≤ n ≤ 10^5)  — количество студентов в группе.
Во второй строке даны n целых чисел, идущих по неубыванию — рейтинги студентов.

Формат вывода
Выведите n чисел через пробел, i-е из которых будет обозначать уровень недовольства группы
при выборе i-го студента старостой.

Пример 1
Ввод
3
1 3 4
Вывод
5 3 4
Пример 2
Ввод
5
3 7 8 10 15
Вывод
28 16 15 17 32
"""


n, ls = int(input()), list(map(int, input().split()))

total_sum = sum(ls)
prefix_sum = 0
result = []

#рейтинги даны по возрастанию, поэтому мы можем делить массив на правую и левую части,
# где в левой все цифры будут меньше, чем рейтинг i-го студента, а значит
# мы можем отдельно посчитать модуль суммы для левой и правой частей, а потом их сложить
for i, a in enumerate(ls):
    prefix_sum += a
    dissatisfaction = abs(prefix_sum - a * (i + 1)) + abs(total_sum - prefix_sum - a * (n - i - 1))
    result.append(dissatisfaction)

print(*result)


# решение с numpy (не прошло, поскольку эту библиотеку нельзя было использовать в тренировках)
"""
import numpy as np

n, ls = int(input()), list(map(int, input().split()))
start_ar = np.zeros((n,n))
res = []
for i, a in enumerate(ls):
    for j in range(i+1, n):
        start_ar[i][j] = abs(a-ls[j])
    res.append(int(sum(start_ar[:,i]) + sum(start_ar[i])))
print(*res)
"""

#менее оптимальное решение O(N) < O(сл-ть задачи) < O(N^2)(не прошло на 100000 записей)
"""
n, ls = int(input()), list(map(int, input().split()))
plus_row, res = [0]*n, []
for i, a in enumerate(ls):
    i_ar = []
    for j, k in enumerate(ls[i+1::]):
        z = abs(a-k)
        i_ar.append(z)
        plus_row[j+i+1] += z
    res.append(sum(i_ar)+plus_row[i])
print(*res)
"""