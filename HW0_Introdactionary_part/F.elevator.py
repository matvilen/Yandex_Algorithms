"""
Ограничение времени	- 1 секунды
Ограничение памяти	- 256Mb

Тридцатого декабря все сотрудники известной IT-компании отправляются праздновать Новый год!
На парковке офиса сотрудников уже ожидают автобусы, чтобы отвезти их в ресторан. Известно, что на
i-м этаже работает a_i сотрудников, а парковка расположена на нулевом этаже.
Изначально лифт расположен на этаже с парковкой. Какое минимальное количество времени
лифт будет перевозить всех людей на парковку? Известно, что лифт движется со скоростью один этаж
в секунду, а посадка и высадка происходит мгновенно.

Формат ввода
В первой строке дано единственное целое число k(1≤k≤109) — количество людей,
которое вмещает лифт за одну поездку.
Во второй строке дано единственное целое число n  — количество этажей в здании.
В следующих n(1≤n≤105) строках дано по одному целому неотрицательному числу a_i(0≤ai≤109),
которое обозначает количество сотрудников на этаже номер i.

Формат вывода
Выведите единственное целое число  — минимальное количество секунд, которое необходимо,
чтобы все сотрудники оказались на парковке.

Пример
Ввод
2
3
3
0
1

Вывод
8

"""


import math


k, n = int(input()), int(input())
tm_osn, z, i, ost, i_ost_last = 0, 0, 0, k, 0
ost_ar = [] #будет состоять и кортежей (кол-во ост. людей, этаж)

#просчитаем сколько секунд будет потрачено на перевозку людей с полностью
#заполненным лифтом и заполним массив ost_ar оставшимися людьми на этажах
for i in range(n):
    a = int(input())
    tm_osn += (i+1) * 2 * math.floor(a / k)
    fl_ost = a % k
    if fl_ost != 0:
        ost_ar.append((fl_ost, i+1))

#подсчитаем сколько сек потратит лифт собирая людей с разных этажей
#забирать начнет с верхнего - так потратит м-е времени
i_max = 0
key = True
for a, b in ost_ar[::-1]:
    i_max += b if i_max == 0 else 0
    in_lift_from_fl = ost if a >= ost else a
    ost -= in_lift_from_fl #ost - кол-во людей, которое ещё может войти в лифт
    if ost == 0:
        ost = k - (a - in_lift_from_fl)
        tm_osn += i_max * 2
        i_max = b if ost < k else 0
tm_osn += i_max * 2 if ost != k else 0
print(tm_osn)
